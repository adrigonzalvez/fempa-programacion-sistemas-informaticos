package fempa.bingoserver;

import java.net.URI;
import java.net.http.WebSocket;
import java.net.http.WebSocket.Builder;
import java.net.http.WebSocket.Listener;
import java.nio.ByteBuffer;
import java.time.Duration;
import java.net.http.HttpClient;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;

public class BingoServer {

	public static void main(String[] args) {
		String ENDPOINT = "ws://localhost:8080";
		HttpClient client = HttpClient.newHttpClient();
		CompletableFuture<WebSocket> ws = client.newWebSocketBuilder().buildAsync(URI.create(ENDPOINT), new WebSocket.Listener() {
			@Override
			public void onOpen(WebSocket webSocket) {
				// TODO Auto-generated method stub
				Listener.super.onOpen(webSocket);
			}
			
			@Override
			public CompletionStage<?> onClose(WebSocket webSocket, int statusCode, String reason) {
				// TODO Auto-generated method stub
				return Listener.super.onClose(webSocket, statusCode, reason);
			}
			
			@Override
			public void onError(WebSocket webSocket, Throwable error) {
				// TODO Auto-generated method stub
				Listener.super.onError(webSocket, error);
			}
			
			@Override
			public CompletionStage<?> onPing(WebSocket webSocket, ByteBuffer message) {
				// TODO Auto-generated method stub
				return Listener.super.onPing(webSocket, message);
			}
			
			@Override
			public CompletionStage<?> onPong(WebSocket webSocket, ByteBuffer message) {
				// TODO Auto-generated method stub
				return Listener.super.onPong(webSocket, message);
			}
			
			@Override
			public CompletionStage<?> onText(WebSocket webSocket, CharSequence data, boolean last) {
				// TODO Auto-generated method stub
				return Listener.super.onText(webSocket, data, last);
			}
			
		});
		
		
		WebSocket server = ws.join();

		
		try {
			//server.sendText(ENDPOINT, false);
			
		} catch (Exception ex) {
			
		}

		
		
		

	}
	
	

}
